networks:
  easy-vpn:
    driver: bridge

services:

  easy-vpn-init:
    image: easyvpn/init:latest
    profiles:
      - init
    depends_on:
      - easy-vpn-database
      - easy-vpn-backend
      - wireguard-vpn-service
      - amneziawg-vpn-service
    container_name: init
    build:
      context: init/
      dockerfile: Dockerfile
    environment:
      - API=http://backend:80
      - DB_CONNECTION_STRING=postgresql://${MAIN_DB_USER}:${MAIN_DB_PASSWORD}@database:5432
      - CREATE_SECURITY_KEEPER=${INIT_SECURITY_KEEPER:-NO}
    restart: no
    networks:
      - easy-vpn

# ╔═══ REGION: Base infractructure services ═══╗
  easy-vpn-database:
    image: postgres:16
    container_name: database
    environment:
      - POSTGRES_USER=${MAIN_DB_USER}
      - POSTGRES_PASSWORD=${MAIN_DB_PASSWORD}
    ports:
      - "5432"
    restart: unless-stopped
    volumes:
      - ${MAIN_DB_VOLUME}:/var/lib/postgresql/data
    networks:
      - easy-vpn

  easy-vpn-backend:
    image: easyvpn/backend:latest
    depends_on:
      - easy-vpn-database
    container_name: backend
    ports:
      - "80"
    build:
      context: backend/
      dockerfile: Dockerfile
    environment:
      - JwtSettings__Secret=channel-conclude-tacking-clammy-jogger-author-annually-enviable-retrieval-vanish-drown-recess-hydroxide-snowman-prism-parkway-implicit-gooey-detoxify-protector
      - JwtSettings__ExpiryMinutes=15
      - HashSettings__Secret=darling-anagram-stadium-unloving-chance-clerical-pendant-able-balsamic-krypton-arrogant-cruncher-module-juggling-sheep-pope-turret-faculty-liable-gorged
      - ConnectionStrings__Postgres=User ID=${MAIN_DB_USER};Password=${MAIN_DB_PASSWORD};Host=database;Port=5432;
      - ASPNETCORE_URLS=http://+:80
    restart: unless-stopped
    networks:
      - easy-vpn

  easy-vpn-frontend:
    image: easyvpn/frontend:latest
    depends_on:
      - easy-vpn-backend
    container_name: frontend
    ports:
      - "3000"
    build:
      context: frontend/
      dockerfile: Dockerfile
    environment:
      - REACT_APP_API_URL=http://localhost:${MAIN_PORT}/api/
      - REACT_APP_AUTH_CHECK_MINUTES=${FRONT_CHECK_AUTH}
    restart: unless-stopped
    networks:
      - easy-vpn

  easy-vpn-proxy:
    image: nginx:mainline
    depends_on:
      - easy-vpn-backend
      - easy-vpn-frontend
    container_name: proxy
    ports:
      - "${MAIN_PORT}:${MAIN_PORT}"
    command: >
      /bin/sh -c "
        echo 'worker_processes 4;

        events {
            worker_connections 1024;
        }

        http {
            server {
                listen ${MAIN_PORT};

                location / {
                    proxy_pass http://frontend:3000;
                }

                location /api/ {
                    rewrite ^/api/(.*)$ /$1 break;
                    proxy_pass http://backend:80;
            }
            }
        }' > /etc/nginx/nginx.conf && nginx -g 'daemon off;'
      "
    restart: unless-stopped
    networks:
      - easy-vpn
# ╚═══ REGION: Base infractructure services ═══╝



# ╔═══ REGION: VPN services ═══╗
  wireguard-vpn-service:
    image: easyvpn/wireguard-vpn:latest
    container_name: wireguard-vpn-service
    build:
      context: services/WireguardVpn
      dockerfile: Dockerfile
    environment:
      - SERVICE_HOST=${VPN_IP}  # your host address
      - SERVICE_USER=${VPN_USER}            # your user name for auth
      - SERVICE_PASSWORD=${VPN_PASSWORD}      # your password for auth
      - VPN_PORT=${WG_VPN_PORT}
      - API_PORT=${WG_API_PORT}
    ports:
      - "${WG_VPN_PORT}:${WG_VPN_PORT}/udp"  # wireguard port
      - "${WG_API_PORT}:${WG_API_PORT}/tcp"    # http-api port
    volumes:
      - ${WG_VOLUME}:/etc/wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    restart: unless-stopped

  amneziawg-vpn-service:
    image: easyvpn/amneziawg-vpn:latest
    container_name: amneziawg-vpn-service
    build:
      context: services/AmneziaWgVpn
      dockerfile: Dockerfile
    environment:
      - SERVICE_HOST=${VPN_IP}  # your host address
      - SERVICE_USER=${VPN_USER}            # your user name for auth
      - SERVICE_PASSWORD=${VPN_PASSWORD}      # your password for auth
      - VPN_PORT=${AWG_VPN_PORT}
      - API_PORT=${AWG_API_PORT}
    ports:
      - "${AWG_VPN_PORT}:${AWG_VPN_PORT}/udp"  # amnezia wg port
      - "${AWG_API_PORT}:${AWG_API_PORT}/tcp"    # http-api port
    volumes:
      - ${AWG_VOLUME}:/etc/amnezia
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    devices:
      - "/dev/net/tun:/dev/net/tun"  # device mapping for TUN interface
    restart: unless-stopped
# ╚═══ REGION: VPN services ═══╝



# ╔═══ REGION: Other services ═══╗
  bot-service:
    image: easyvpn/bot:latest
    container_name: bot-service
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
    restart: unless-stopped
# ╚═══ REGION: Other services ═══╝